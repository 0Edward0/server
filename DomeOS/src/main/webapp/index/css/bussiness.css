/*
 * @description: dome console bussiness stylesheet
 * @version: 0.1
 */
/*
 * @description: common css variable and function
 * @version: 0.1
 */
.page {
  padding-left: 225px;
  transition: padding-left 0.1s linear;
  overflow: hidden; }
  .page .content .module {
    padding: 0px;
    margin: 0 20px 20px 20px;
    background-color: #fff;
    width: auto;
    border-radius: 3px; }

@media (max-height: 1300px) {
  .module {
    min-height: 1200px; } }
@media (max-height: 640px) {
  .module {
    min-height: 460px; } }
@media (max-height: 790px) {
  .module {
    min-height: 560px; } }
.thin-left-nav .page {
  padding-left: 70px; }

.top-prompt {
  height: 34px;
  padding: 7px 20px 0 20px;
  background-color: #ffe3a6; }
  .top-prompt .txt-bright {
    text-decoration: underline; }
  .top-prompt .icon-cancel {
    float: right;
    margin-top: 4px; }

.header {
  width: 100%;
  padding: 15px 20px 15px 20px;
  color: #fff; }
  .header .breadcrunmbs {
    padding-top: 10px;
    padding-bottom: 10px; }
    .header .breadcrunmbs .breadcrumb {
      display: inline-block;
      background: none;
      padding: 0;
      margin: 0;
      padding-left: 14px;
      border-radius: 0px; }
      .header .breadcrunmbs .breadcrumb a, .header .breadcrunmbs .breadcrumb span {
        color: #888; }
    .header .breadcrunmbs .sidebar a {
      color: #444; }
    .header .breadcrunmbs .sidebar a:hover {
      color: #188ae2; }
  .header .header-item > li {
    margin-left: 24px;
    display: inline-block;
    vertical-align: top; }
    .header .header-item > li.header-doc a {
      color: #888; }
    .header .header-item > li.header-doc .icon-doc {
      margin-right: 10px; }
    .header .header-item > li.header-user {
      position: relative;
      min-width: 80px; }
      .header .header-item > li.header-user .user-header {
        height: 26px;
        width: 26px;
        border-radius: 50%;
        margin-right: 10px; }
      .header .header-item > li.header-user .username {
        display: block;
        text-align: right;
        color: #888; }
        .header .header-item > li.header-user .username .icon-down-white {
          margin-left: 8px; }
  .header .page-info {
    overflow: hidden; }
    .header .page-info .page-title {
      float: left;
      margin: 5px 40px 21px 0;
      font-size: 22px; }
    .header .page-info .page-detail {
      display: block;
      margin-top: 8px; }

.mod-option {
  padding: 20px; }
  .mod-option.hasborder {
    border-bottom: 10px solid #def0fe; }
  .mod-option .ui-btn-lg {
    height: 34px;
    width: 100px;
    color: #fff;
    font-size: 14px;
    font-weight: normal;
    background-color: #188ae2; }
    .mod-option .ui-btn-lg .icon-add-white {
      margin-right: 4px; }
  .mod-option .right-option .ui-input-search {
    margin-left: 34px; }
  .mod-option .right-option .icon-down-white {
    margin-left: 4px; }

.mod-list .ui-table-dome .ui-btn:not(:first-child) {
  margin-left: 10px; }

.detail-header {
  padding: 20px 20px 20px 20px;
  border-bottom: 20px solid #f0f2f5;
  overflow: hidden; }
  .detail-header .detail-item {
    float: left; }
    .detail-header .detail-item .item-name {
      display: block;
      font-size: 14px; }
    .detail-header .detail-item .item-content {
      display: inline-block;
      margin-top: 4px;
      color: #444; }
      .detail-header .detail-item .item-content + .item-content {
        margin-left: 8px; }
  .detail-header .detail-sep {
    float: left;
    display: block;
    height: 30px;
    width: 2px;
    margin: 13px 22px 0 22px;
    background-color: #eee; }

.mod-title {
  font-weight: bold;
  font-size: 14px;
  margin: 18px 0 18px 42px; }

.mod-project .setting-type {
  display: inline-block;
  width: 200px;
  height: 100px;
  margin-right: 14px;
  padding: 12px 6px 12px;
  border: 2px solid transparent;
  background-color: #f0f2f5;
  border-radius: 3px;
  vertical-align: top;
  -moz-transition: background-color 0.2s;
  -o-transition: background-color 0.2s;
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s; }
  .mod-project .setting-type:hover {
    cursor: pointer; }
  .mod-project .setting-type:hover, .mod-project .setting-type.active {
    border: 2px solid #188ae2;
    background-color: #fff; }
  .mod-project .setting-type h4 {
    margin-bottom: 14px;
    font-size: 14px;
    font-weight: bold; }
  .mod-project .setting-type p {
    font-size: 12px; }

.com-creator-selection {
  display: inline-block; }
  .com-creator-selection .com-select-con {
    display: inline-block; }
  .com-creator-selection .role-select {
    width: 80px;
    margin-right: 10px; }

.com-list-info {
  padding: 20px; }
  .com-list-info > li {
    display: table;
    width: 100%; }
    .com-list-info > li .info-name {
      display: table-cell;
      width: 162px;
      padding: 26px 8px;
      vertical-align: top;
      font-weight: bold; }
      .com-list-info > li .info-name.not-align-input {
        padding-top: 16px; }
      .com-list-info > li .info-name.info-name-sm {
        padding-top: 23px; }
      .com-list-info > li .info-name.info-name-lg {
        padding-top: 38px; }
    .com-list-info > li .info-simple {
      display: inline-block;
      width: 70%;
      padding: 23px 0 16px 45px; }
    .com-list-info > li .info-content {
      display: table-cell;
      padding: 20px; }
      .com-list-info > li .info-content.nochild {
        padding-top: 23px; }
      .com-list-info > li .info-content.info-content-lg-height {
        padding-top: 26px; }
      .com-list-info > li .info-content .com-check-con {
        margin-right: 40px; }
      .com-list-info > li .info-content .log-topic {
        display: -webkit-flex;
        display: flex; }
        .com-list-info > li .info-content .log-topic .ui-input-fill {
          -webkit-flex: 1;
          flex: 1;
          margin-right: 0; }
      .com-list-info > li .info-content .auto-collect {
        display: inline-block;
        padding-top: 8px;
        top: 0 !important; }
      .com-list-info > li .info-content .container-unit {
        display: inline-block;
        margin-top: 8px; }
      .com-list-info > li .info-content .host-txt-con {
        display: -webkit-flex;
        display: flex;
        width: 100%;
        height: auto;
        min-height: 34px; }
      .com-list-info > li .info-content .line-short, .com-list-info > li .info-content .line-long, .com-list-info > li .info-content .line-single, .com-list-info > li .info-content .line-longer {
        position: relative;
        width: 40%;
        display: -webkit-flex;
        display: flex; }
        .com-list-info > li .info-content .line-short:not(:first-child), .com-list-info > li .info-content .line-long:not(:first-child), .com-list-info > li .info-content .line-single:not(:first-child), .com-list-info > li .info-content .line-longer:not(:first-child) {
          margin-top: 16px; }
      .com-list-info > li .info-content .txt-wrap {
        position: absolute;
        left: 100%;
        top: 7px;
        margin-left: 10px;
        width: 300px; }
      .com-list-info > li .info-content .txt-wrap-icon {
        position: absolute;
        left: 100%;
        margin-left: 10px; }
      .com-list-info > li .info-content .line-long {
        width: 60%; }
      .com-list-info > li .info-content .line-longer {
        width: 70%; }
      .com-list-info > li .info-content .line-single {
        position: relative;
        width: 70%; }
        .com-list-info > li .info-content .line-single .single-element {
          width: 100%; }
      .com-list-info > li .info-content .line-element {
        position: relative;
        flex: 1; }
      .com-list-info > li .info-content .child-name {
        width: 120px;
        line-height: 30px; }
      .com-list-info > li .info-content .child-info .ui-input-fill {
        width: 100%;
        margin-bottom: 16px; }
      .com-list-info > li .info-content .child-info .child-repeat {
        position: relative; }
      .com-list-info > li .info-content .child-error {
        padding-left: 122px; }
      .com-list-info > li .info-content .child-txt {
        line-height: 30px; }
      .com-list-info > li .info-content .top-margin {
        margin-top: 20px; }
      .com-list-info > li .info-content .align-name {
        display: block;
        padding-top: 4px; }
    .com-list-info > li.has-border {
      border-bottom: 1px solid #f0f2f5; }
  .com-list-info.border-info {
    border: 1px solid #f0f2f5; }
    .com-list-info.border-info li {
      border-top: 1px solid #f0f2f5; }
      .com-list-info.border-info li:first-child {
        border-top: none; }
      .com-list-info.border-info li .info-simple, .com-list-info.border-info li .info-content {
        border-left: 1px solid #f0f2f5; }

.mod-deploy .log-error {
  padding-left: 110px; }
.mod-deploy .add-loadbalance {
  margin-top: 12px; }
.mod-deploy .log-item {
  position: relative;
  width: 60%;
  padding: 10px 30px 10px 10px;
  margin-bottom: 12px;
  border: 1px solid #f0f2f5; }
  .mod-deploy .log-item .cancel-log {
    position: absolute;
    top: 8px;
    right: 8px; }
  .mod-deploy .log-item .element-full {
    width: 100%; }
  .mod-deploy .log-item .log-check, .mod-deploy .log-item .ips {
    margin-top: 10px; }
  .mod-deploy .log-item .ips {
    position: relative; }
    .mod-deploy .log-item .ips:first-child {
      margin-top: 0; }
  .mod-deploy .log-item .line-full {
    margin-top: 10px;
    display: -webkit-flex;
    display: flex; }
    .mod-deploy .log-item .line-full .log-title {
      width: 110px;
      padding-top: 6px; }
      .mod-deploy .log-item .line-full .log-title.not-align-input {
        padding-top: 0; }
    .mod-deploy .log-item .line-full .serlog-title {
      width: 130px;
      padding-top: 6px; }
  .mod-deploy .log-item .unit {
    display: inline-block;
    margin: 7px 0 0 10px; }
.mod-deploy .require-domian {
  color: #f5707a; }
.mod-deploy .com-bottom-option-create {
  padding-top: 30px;
  padding-bottom: 30px;
  text-align: left;
  margin-left: 190px; }

.mod-cluster .select-creator {
  width: 70%; }
.mod-cluster .cluster-log-con {
  width: 70%; }
  .mod-cluster .cluster-log-con .cluster-log {
    width: 100%; }
    .mod-cluster .cluster-log-con .cluster-log:not(:first-child) {
      margin-top: 10px; }
.mod-cluster .protocol {
  margin: 8px 8px 0 0; }

.modal-newpw .info-name {
  display: inline-block;
  margin-top: 6px; }

.modal-container .com-select-con {
  display: inline-block;
  width: 400px; }

.modal-buildModal .info-txt input {
  width: 100%; }

.modal-instance .com-list-table {
  margin: 0 -15px 0 -15px;
  max-height: 300px;
  overflow-y: auto; }

.modal-scale ul {
  display: inline-block;
  text-align: left; }
.modal-scale .info-name {
  display: inline-block;
  width: 106px;
  padding-top: 6px;
  vertical-align: top; }
.modal-scale .info-content {
  display: inline-block; }
  .modal-scale .info-content .ui-input-white {
    width: 126px;
    margin-right: 10px; }

.alarm-tpl-detail .btn-edit {
  margin: 18px 0 20px 42px;
  margin-bottom: 12px; }



/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=../../maps/index/css/bussiness.css.map */
