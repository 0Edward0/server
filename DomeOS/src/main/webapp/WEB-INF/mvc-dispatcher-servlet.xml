<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:aop="http://www.springframework.org/schema/aop"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="org.domeos">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
    </context:component-scan>
    <aop:aspectj-autoproxy/>
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" p:objectMapper-ref="modelObjectMapper"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <bean class="org.domeos.global.StartupListener"/>
    <bean id="mysqlDataSource" class="org.domeos.util.MysqlDriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value=""/>
        <property name="username" value=""/>
        <property name="password" value=""/>
    </bean>
    <jdbc:embedded-database id="h2DataSource" type="H2">
        <jdbc:script location="classpath:create-db.sql" />
        <jdbc:script location="classpath:insert-data.sql" />
    </jdbc:embedded-database>
    <bean id="multipleDataSource" class="org.domeos.util.MultipleDataSource">
        <property name="targetDataSources">
            <map key-type="org.domeos.util.DatabaseType">
                <entry key="MYSQL" value-ref="mysqlDataSource"/>
                <entry key="H2" value-ref="h2DataSource"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="h2DataSource"/>
    </bean>

    <!--shiro related start -->
    <!--<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">-->
    <!--<property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"/>-->
    <!--</bean>-->

    <bean id="credentialsMatcher" class="org.domeos.framework.shiro.credentials.RetryLimitHashedCredentialsMatcher">
        <!--<constructor-arg ref="cacheManager"/>-->
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>

    <bean id = "jdbcRealm" class="org.domeos.framework.shiro.realm.JdbcRealm">
        <property name="userService" ref="userService"/>
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="authenticationCache"/>
        <property name="authorizationCachingEnabled" value="true"/>
        <property name="authorizationCacheName" value="authorizationCache"/>
        <property name="name" value="USER"/>
    </bean>
    <bean id="ldapRealm" class="org.domeos.framework.shiro.realm.LdapRealm">
        <property name="contextFactory" ref="ldapContextFactory" />
        <property name="name" value="LDAP"/>
    </bean>

    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="4320000"/>
    </bean>

    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="43200000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="43200000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="authenticator">
            <bean class="org.domeos.framework.shiro.authenticator.MultiLoginAuthenticator" />
        </property>
        <property name="realms">
            <list>
                <ref bean="jdbcRealm" />
                <ref bean="ldapRealm" />
            </list>
        </property>
        <property name="sessionManager" ref="sessionManager"/>
        <!--<property name="cacheManager" ref="cacheManager"/>-->
    </bean>

    <mvc:default-servlet-handler/>

    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
    <!--<bean id="formAuthenticationFilter" class="org.domeos.framework.shiro.filter.UserFormAuthenticationFilter">-->
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="loginUrl" value="/login/login.html"/>
        <!--<property name="loginUrl" value="/pages/login.jsp"/>-->
    </bean>

    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/login/login.html" />
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login/login.html"/>
        <!--<property name="successUrl" value="/index.html"/>-->
        <!--<property name="unauthorizedUrl" value="/pages/unauthorized.jsp"/>-->
        <property name="unauthorizedUrl" value="/login/login.html"/>
        <property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <entry key="logout" value-ref="logoutFilter"/>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /api/ci/build/autobuild = anon
                /api/ci/build/builddockerfile/** = anon
                /api/ci/build/compilefile/** = anon
                /api/ci/build/status = anon
                /api/ci/build/upload/** = anon
                /api/ci/build/log/** = anon
                /api/image/custom/download/** = anon
                /api/image/custom/status = anon
                /api/image/custom/upload/** = anon
                /api/image/custom/log/** = anon
                /api/image/custom/getfilejson/** = anon
                /api/agent/** = anon
                /api/user/login = anon
                /api/global/registry/private/certification = anon
                /anon/* = anon
                /anon/js/* = anon
                /api/alarm/action/** = anon
                /api/alarm/group/users/** = anon
                /api/alarm/link/** = anon
                /api/alarm/send/** = anon

                /common/** = anon
                /lib/** = anon
                /index/** = anon
                /login/js/* = anon
                /login/images/* = anon
                /login/css/* = anon
                /login/login.html = anon
                /pages/login.htm = anon
                /pages/index.jsp = anon
                /pages/unauthorized.jsp = anon
                /pages/login.jsp = authc
                /api/user/logout = logout
                /** = user
            </value>
        </property>
    </bean>
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="multipleDataSource"/>
        <property name="configLocation" value="/WEB-INF/conf/mybatis-config.xml"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.domeos.api.mapper"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.domeos.framework.engine.mapper"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.domeos.framework.api.mapper"/>
    </bean>
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="10760000"/>
        <property name="maxInMemorySize" value="40960"/>
    </bean>
</beans>