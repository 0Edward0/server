'use strict';

(function (domeApp, undefined) {
	'use strict';

	if (typeof domeApp === 'undefined') return;
	domeApp.controller('BranchCheckModalCtr', BranchCheckModalCtr);

	function BranchCheckModalCtr($modalInstance, $domeProject, codeInfo, projectId) {
		var vm = this;
		vm.check = 'Branch';
		vm.branchKey = '';
		if (projectId) {
			$domeProject.projectService.getBranches(projectId).then(function (res) {
				vm.branches = res.data.result || [];
			});
			$domeProject.projectService.getTags(projectId).then(function (res) {
				vm.tags = res.data.result || [];
			});
		} else {
			$domeProject.projectService.getBranchesWithoutId(codeInfo.codeId, codeInfo.codeManagerUserId, codeInfo.codeManager).then(function (res) {
				vm.branches = res.data.result || [];
			});
			$domeProject.projectService.getTagsWithoutId(codeInfo.codeId, codeInfo.codeManagerUserId, codeInfo.codeManager).then(function (res) {
				vm.tags = res.data.result || [];
			});
		}
		vm.toggle = function (model) {
			vm.check = model;
			vm.branchKey = '';
			vm.selectedBranch = '';
		};
		vm.cancel = function () {
			$modalInstance.dismiss('cancel');
		};
		vm.submitBranch = function () {
			$modalInstance.close({
				type: vm.check.toLowerCase(),
				value: vm.selectedBranch
			});
		};
		vm.toggleBranch = function (branch) {
			vm.branchKey = '';
			vm.selectedBranch = branch;
		};
	}
	BranchCheckModalCtr.$inject = ['$modalInstance', '$domeProject', 'codeInfo', 'projectId'];
})(window.domeApp);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4L3RwbC9tb2RhbC9icmFuY2hDaGVja01vZGFsL2JyYW5jaENoZWNrTW9kYWxDdHIuZXMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxDQUFDLFVBQVUsT0FBVixFQUFtQixTQUFuQixFQUE4QjtBQUM5QixjQUQ4Qjs7QUFFOUIsS0FBSSxPQUFPLE9BQVAsS0FBbUIsV0FBbkIsRUFBZ0MsT0FBcEM7QUFDQSxTQUFRLFVBQVIsQ0FBbUIscUJBQW5CLEVBQTBDLG1CQUExQyxFQUg4Qjs7QUFLOUIsVUFBUyxtQkFBVCxDQUE2QixjQUE3QixFQUE2QyxZQUE3QyxFQUEyRCxRQUEzRCxFQUFxRSxTQUFyRSxFQUFnRjtBQUMvRSxNQUFJLEtBQUssSUFBTCxDQUQyRTtBQUUvRSxLQUFHLEtBQUgsR0FBVyxRQUFYLENBRitFO0FBRy9FLEtBQUcsU0FBSCxHQUFlLEVBQWYsQ0FIK0U7QUFJL0UsTUFBSSxTQUFKLEVBQWU7QUFDZCxnQkFBYSxjQUFiLENBQTRCLFdBQTVCLENBQXdDLFNBQXhDLEVBQW1ELElBQW5ELENBQXdELFVBQVUsR0FBVixFQUFlO0FBQ3RFLE9BQUcsUUFBSCxHQUFjLElBQUksSUFBSixDQUFTLE1BQVQsSUFBbUIsRUFBbkIsQ0FEd0Q7SUFBZixDQUF4RCxDQURjO0FBSWQsZ0JBQWEsY0FBYixDQUE0QixPQUE1QixDQUFvQyxTQUFwQyxFQUErQyxJQUEvQyxDQUFvRCxVQUFVLEdBQVYsRUFBZTtBQUNsRSxPQUFHLElBQUgsR0FBVSxJQUFJLElBQUosQ0FBUyxNQUFULElBQW1CLEVBQW5CLENBRHdEO0lBQWYsQ0FBcEQsQ0FKYztHQUFmLE1BT087QUFDTixnQkFBYSxjQUFiLENBQTRCLG9CQUE1QixDQUFpRCxTQUFTLE1BQVQsRUFBaUIsU0FBUyxpQkFBVCxFQUE0QixTQUFTLFdBQVQsQ0FBOUYsQ0FBb0gsSUFBcEgsQ0FBeUgsVUFBVSxHQUFWLEVBQWU7QUFDdkksT0FBRyxRQUFILEdBQWMsSUFBSSxJQUFKLENBQVMsTUFBVCxJQUFtQixFQUFuQixDQUR5SDtJQUFmLENBQXpILENBRE07QUFJTixnQkFBYSxjQUFiLENBQTRCLGdCQUE1QixDQUE2QyxTQUFTLE1BQVQsRUFBaUIsU0FBUyxpQkFBVCxFQUE0QixTQUFTLFdBQVQsQ0FBMUYsQ0FBZ0gsSUFBaEgsQ0FBcUgsVUFBVSxHQUFWLEVBQWU7QUFDbkksT0FBRyxJQUFILEdBQVUsSUFBSSxJQUFKLENBQVMsTUFBVCxJQUFtQixFQUFuQixDQUR5SDtJQUFmLENBQXJILENBSk07R0FQUDtBQWVBLEtBQUcsTUFBSCxHQUFZLFVBQUMsS0FBRCxFQUFXO0FBQ3RCLE1BQUcsS0FBSCxHQUFXLEtBQVgsQ0FEc0I7QUFFdEIsTUFBRyxTQUFILEdBQWUsRUFBZixDQUZzQjtBQUd0QixNQUFHLGNBQUgsR0FBb0IsRUFBcEIsQ0FIc0I7R0FBWCxDQW5CbUU7QUF3Qi9FLEtBQUcsTUFBSCxHQUFZLFlBQVk7QUFDdkIsa0JBQWUsT0FBZixDQUF1QixRQUF2QixFQUR1QjtHQUFaLENBeEJtRTtBQTJCL0UsS0FBRyxZQUFILEdBQWtCLFlBQVk7QUFDN0Isa0JBQWUsS0FBZixDQUFxQjtBQUNwQixVQUFNLEdBQUcsS0FBSCxDQUFTLFdBQVQsRUFBTjtBQUNBLFdBQU8sR0FBRyxjQUFIO0lBRlIsRUFENkI7R0FBWixDQTNCNkQ7QUFpQy9FLEtBQUcsWUFBSCxHQUFrQixVQUFVLE1BQVYsRUFBa0I7QUFDbkMsTUFBRyxTQUFILEdBQWUsRUFBZixDQURtQztBQUVuQyxNQUFHLGNBQUgsR0FBb0IsTUFBcEIsQ0FGbUM7R0FBbEIsQ0FqQzZEO0VBQWhGO0FBc0NBLHFCQUFvQixPQUFwQixHQUE4QixDQUFDLGdCQUFELEVBQW1CLGNBQW5CLEVBQW1DLFVBQW5DLEVBQStDLFdBQS9DLENBQTlCLENBM0M4QjtDQUE5QixDQUFELENBNENHLE9BQU8sT0FBUCxDQTVDSCIsImZpbGUiOiJpbmRleC90cGwvbW9kYWwvYnJhbmNoQ2hlY2tNb2RhbC9icmFuY2hDaGVja01vZGFsQ3RyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIChkb21lQXBwLCB1bmRlZmluZWQpIHtcblx0J3VzZSBzdHJpY3QnO1xuXHRpZiAodHlwZW9mIGRvbWVBcHAgPT09ICd1bmRlZmluZWQnKSByZXR1cm47XG5cdGRvbWVBcHAuY29udHJvbGxlcignQnJhbmNoQ2hlY2tNb2RhbEN0cicsIEJyYW5jaENoZWNrTW9kYWxDdHIpO1xuXG5cdGZ1bmN0aW9uIEJyYW5jaENoZWNrTW9kYWxDdHIoJG1vZGFsSW5zdGFuY2UsICRkb21lUHJvamVjdCwgY29kZUluZm8sIHByb2plY3RJZCkge1xuXHRcdHZhciB2bSA9IHRoaXM7XG5cdFx0dm0uY2hlY2sgPSAnQnJhbmNoJztcblx0XHR2bS5icmFuY2hLZXkgPSAnJztcblx0XHRpZiAocHJvamVjdElkKSB7XG5cdFx0XHQkZG9tZVByb2plY3QucHJvamVjdFNlcnZpY2UuZ2V0QnJhbmNoZXMocHJvamVjdElkKS50aGVuKGZ1bmN0aW9uIChyZXMpIHtcblx0XHRcdFx0dm0uYnJhbmNoZXMgPSByZXMuZGF0YS5yZXN1bHQgfHwgW107XG5cdFx0XHR9KTtcblx0XHRcdCRkb21lUHJvamVjdC5wcm9qZWN0U2VydmljZS5nZXRUYWdzKHByb2plY3RJZCkudGhlbihmdW5jdGlvbiAocmVzKSB7XG5cdFx0XHRcdHZtLnRhZ3MgPSByZXMuZGF0YS5yZXN1bHQgfHwgW107XG5cdFx0XHR9KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0JGRvbWVQcm9qZWN0LnByb2plY3RTZXJ2aWNlLmdldEJyYW5jaGVzV2l0aG91dElkKGNvZGVJbmZvLmNvZGVJZCwgY29kZUluZm8uY29kZU1hbmFnZXJVc2VySWQsIGNvZGVJbmZvLmNvZGVNYW5hZ2VyKS50aGVuKGZ1bmN0aW9uIChyZXMpIHtcblx0XHRcdFx0dm0uYnJhbmNoZXMgPSByZXMuZGF0YS5yZXN1bHQgfHwgW107XG5cdFx0XHR9KTtcblx0XHRcdCRkb21lUHJvamVjdC5wcm9qZWN0U2VydmljZS5nZXRUYWdzV2l0aG91dElkKGNvZGVJbmZvLmNvZGVJZCwgY29kZUluZm8uY29kZU1hbmFnZXJVc2VySWQsIGNvZGVJbmZvLmNvZGVNYW5hZ2VyKS50aGVuKGZ1bmN0aW9uIChyZXMpIHtcblx0XHRcdFx0dm0udGFncyA9IHJlcy5kYXRhLnJlc3VsdCB8fCBbXTtcblx0XHRcdH0pO1xuXHRcdH1cblx0XHR2bS50b2dnbGUgPSAobW9kZWwpID0+IHtcblx0XHRcdHZtLmNoZWNrID0gbW9kZWw7XG5cdFx0XHR2bS5icmFuY2hLZXkgPSAnJztcblx0XHRcdHZtLnNlbGVjdGVkQnJhbmNoID0gJyc7XG5cdFx0fTtcblx0XHR2bS5jYW5jZWwgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHQkbW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTtcblx0XHR9O1xuXHRcdHZtLnN1Ym1pdEJyYW5jaCA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdCRtb2RhbEluc3RhbmNlLmNsb3NlKHtcblx0XHRcdFx0dHlwZTogdm0uY2hlY2sudG9Mb3dlckNhc2UoKSxcblx0XHRcdFx0dmFsdWU6IHZtLnNlbGVjdGVkQnJhbmNoXG5cdFx0XHR9KTtcblx0XHR9O1xuXHRcdHZtLnRvZ2dsZUJyYW5jaCA9IGZ1bmN0aW9uIChicmFuY2gpIHtcblx0XHRcdHZtLmJyYW5jaEtleSA9ICcnO1xuXHRcdFx0dm0uc2VsZWN0ZWRCcmFuY2ggPSBicmFuY2g7XG5cdFx0fTtcblx0fVxuXHRCcmFuY2hDaGVja01vZGFsQ3RyLiRpbmplY3QgPSBbJyRtb2RhbEluc3RhbmNlJywgJyRkb21lUHJvamVjdCcsICdjb2RlSW5mbycsICdwcm9qZWN0SWQnXTtcbn0pKHdpbmRvdy5kb21lQXBwKTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
