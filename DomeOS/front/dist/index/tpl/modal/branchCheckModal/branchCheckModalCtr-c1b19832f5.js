'use strict';

(function () {
	domeApp.controller('BranchCheckModalCtr', BranchCheckModalCtr);

	function BranchCheckModalCtr($modalInstance, $domeProject, codeInfo, projectId) {
		var vm = this;
		vm.check = 'Branch';
		vm.branchKey = '';
		if (projectId) {
			$domeProject.projectService.getBranches(projectId).then(function (res) {
				vm.branches = res.data.result || [];
			});
			$domeProject.projectService.getTags(projectId).then(function (res) {
				vm.tags = res.data.result || [];
			});
		} else {
			$domeProject.projectService.getBranchesWithoutId(codeInfo.codeId, codeInfo.codeManagerUserId, codeInfo.codeManager).then(function (res) {
				vm.branches = res.data.result || [];
			});
			$domeProject.projectService.getTagsWithoutId(codeInfo.codeId, codeInfo.codeManagerUserId, codeInfo.codeManager).then(function (res) {
				vm.tags = res.data.result || [];
			});
		}
		vm.toggle = function (model) {
			vm.check = model;
			vm.branchKey = '';
			vm.selectedBranch = '';
		};
		vm.cancel = function () {
			$modalInstance.dismiss('cancel');
		};
		vm.submitBranch = function () {
			$modalInstance.close({
				type: vm.check.toLowerCase(),
				value: vm.selectedBranch
			});
		};
		vm.toggleBranch = function (branch) {
			vm.branchKey = '';
			vm.selectedBranch = branch;
		};
	}
	BranchCheckModalCtr.$inject = ['$modalInstance', '$domeProject', 'codeInfo', 'projectId'];
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4L3RwbC9tb2RhbC9icmFuY2hDaGVja01vZGFsL2JyYW5jaENoZWNrTW9kYWxDdHIuZXMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxDQUFDLFlBQVk7QUFDWixTQUFRLFVBQVIsQ0FBbUIscUJBQW5CLEVBQTBDLG1CQUExQyxFQURZOztBQUdaLFVBQVMsbUJBQVQsQ0FBNkIsY0FBN0IsRUFBNkMsWUFBN0MsRUFBMkQsUUFBM0QsRUFBcUUsU0FBckUsRUFBZ0Y7QUFDL0UsTUFBSSxLQUFLLElBQUwsQ0FEMkU7QUFFL0UsS0FBRyxLQUFILEdBQVcsUUFBWCxDQUYrRTtBQUcvRSxLQUFHLFNBQUgsR0FBZSxFQUFmLENBSCtFO0FBSS9FLE1BQUksU0FBSixFQUFlO0FBQ2QsZ0JBQWEsY0FBYixDQUE0QixXQUE1QixDQUF3QyxTQUF4QyxFQUFtRCxJQUFuRCxDQUF3RCxVQUFVLEdBQVYsRUFBZTtBQUN0RSxPQUFHLFFBQUgsR0FBYyxJQUFJLElBQUosQ0FBUyxNQUFULElBQW1CLEVBQW5CLENBRHdEO0lBQWYsQ0FBeEQsQ0FEYztBQUlkLGdCQUFhLGNBQWIsQ0FBNEIsT0FBNUIsQ0FBb0MsU0FBcEMsRUFBK0MsSUFBL0MsQ0FBb0QsVUFBVSxHQUFWLEVBQWU7QUFDbEUsT0FBRyxJQUFILEdBQVUsSUFBSSxJQUFKLENBQVMsTUFBVCxJQUFtQixFQUFuQixDQUR3RDtJQUFmLENBQXBELENBSmM7R0FBZixNQU9PO0FBQ04sZ0JBQWEsY0FBYixDQUE0QixvQkFBNUIsQ0FBaUQsU0FBUyxNQUFULEVBQWlCLFNBQVMsaUJBQVQsRUFBNEIsU0FBUyxXQUFULENBQTlGLENBQW9ILElBQXBILENBQXlILFVBQVUsR0FBVixFQUFlO0FBQ3ZJLE9BQUcsUUFBSCxHQUFjLElBQUksSUFBSixDQUFTLE1BQVQsSUFBbUIsRUFBbkIsQ0FEeUg7SUFBZixDQUF6SCxDQURNO0FBSU4sZ0JBQWEsY0FBYixDQUE0QixnQkFBNUIsQ0FBNkMsU0FBUyxNQUFULEVBQWlCLFNBQVMsaUJBQVQsRUFBNEIsU0FBUyxXQUFULENBQTFGLENBQWdILElBQWhILENBQXFILFVBQVUsR0FBVixFQUFlO0FBQ25JLE9BQUcsSUFBSCxHQUFVLElBQUksSUFBSixDQUFTLE1BQVQsSUFBbUIsRUFBbkIsQ0FEeUg7SUFBZixDQUFySCxDQUpNO0dBUFA7QUFlQSxLQUFHLE1BQUgsR0FBWSxVQUFDLEtBQUQsRUFBVztBQUN0QixNQUFHLEtBQUgsR0FBVyxLQUFYLENBRHNCO0FBRXRCLE1BQUcsU0FBSCxHQUFlLEVBQWYsQ0FGc0I7QUFHdEIsTUFBRyxjQUFILEdBQW9CLEVBQXBCLENBSHNCO0dBQVgsQ0FuQm1FO0FBd0IvRSxLQUFHLE1BQUgsR0FBWSxZQUFZO0FBQ3ZCLGtCQUFlLE9BQWYsQ0FBdUIsUUFBdkIsRUFEdUI7R0FBWixDQXhCbUU7QUEyQi9FLEtBQUcsWUFBSCxHQUFrQixZQUFZO0FBQzdCLGtCQUFlLEtBQWYsQ0FBcUI7QUFDcEIsVUFBTSxHQUFHLEtBQUgsQ0FBUyxXQUFULEVBQU47QUFDQSxXQUFPLEdBQUcsY0FBSDtJQUZSLEVBRDZCO0dBQVosQ0EzQjZEO0FBaUMvRSxLQUFHLFlBQUgsR0FBa0IsVUFBVSxNQUFWLEVBQWtCO0FBQ25DLE1BQUcsU0FBSCxHQUFlLEVBQWYsQ0FEbUM7QUFFbkMsTUFBRyxjQUFILEdBQW9CLE1BQXBCLENBRm1DO0dBQWxCLENBakM2RDtFQUFoRjtBQXNDQSxxQkFBb0IsT0FBcEIsR0FBOEIsQ0FBQyxnQkFBRCxFQUFtQixjQUFuQixFQUFtQyxVQUFuQyxFQUErQyxXQUEvQyxDQUE5QixDQXpDWTtDQUFaLENBQUQiLCJmaWxlIjoiaW5kZXgvdHBsL21vZGFsL2JyYW5jaENoZWNrTW9kYWwvYnJhbmNoQ2hlY2tNb2RhbEN0ci5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoKSB7XG5cdGRvbWVBcHAuY29udHJvbGxlcignQnJhbmNoQ2hlY2tNb2RhbEN0cicsIEJyYW5jaENoZWNrTW9kYWxDdHIpO1xuXG5cdGZ1bmN0aW9uIEJyYW5jaENoZWNrTW9kYWxDdHIoJG1vZGFsSW5zdGFuY2UsICRkb21lUHJvamVjdCwgY29kZUluZm8sIHByb2plY3RJZCkge1xuXHRcdHZhciB2bSA9IHRoaXM7XG5cdFx0dm0uY2hlY2sgPSAnQnJhbmNoJztcblx0XHR2bS5icmFuY2hLZXkgPSAnJztcblx0XHRpZiAocHJvamVjdElkKSB7XG5cdFx0XHQkZG9tZVByb2plY3QucHJvamVjdFNlcnZpY2UuZ2V0QnJhbmNoZXMocHJvamVjdElkKS50aGVuKGZ1bmN0aW9uIChyZXMpIHtcblx0XHRcdFx0dm0uYnJhbmNoZXMgPSByZXMuZGF0YS5yZXN1bHQgfHwgW107XG5cdFx0XHR9KTtcblx0XHRcdCRkb21lUHJvamVjdC5wcm9qZWN0U2VydmljZS5nZXRUYWdzKHByb2plY3RJZCkudGhlbihmdW5jdGlvbiAocmVzKSB7XG5cdFx0XHRcdHZtLnRhZ3MgPSByZXMuZGF0YS5yZXN1bHQgfHwgW107XG5cdFx0XHR9KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0JGRvbWVQcm9qZWN0LnByb2plY3RTZXJ2aWNlLmdldEJyYW5jaGVzV2l0aG91dElkKGNvZGVJbmZvLmNvZGVJZCwgY29kZUluZm8uY29kZU1hbmFnZXJVc2VySWQsIGNvZGVJbmZvLmNvZGVNYW5hZ2VyKS50aGVuKGZ1bmN0aW9uIChyZXMpIHtcblx0XHRcdFx0dm0uYnJhbmNoZXMgPSByZXMuZGF0YS5yZXN1bHQgfHwgW107XG5cdFx0XHR9KTtcblx0XHRcdCRkb21lUHJvamVjdC5wcm9qZWN0U2VydmljZS5nZXRUYWdzV2l0aG91dElkKGNvZGVJbmZvLmNvZGVJZCwgY29kZUluZm8uY29kZU1hbmFnZXJVc2VySWQsIGNvZGVJbmZvLmNvZGVNYW5hZ2VyKS50aGVuKGZ1bmN0aW9uIChyZXMpIHtcblx0XHRcdFx0dm0udGFncyA9IHJlcy5kYXRhLnJlc3VsdCB8fCBbXTtcblx0XHRcdH0pO1xuXHRcdH1cblx0XHR2bS50b2dnbGUgPSAobW9kZWwpID0+IHtcblx0XHRcdHZtLmNoZWNrID0gbW9kZWw7XG5cdFx0XHR2bS5icmFuY2hLZXkgPSAnJztcblx0XHRcdHZtLnNlbGVjdGVkQnJhbmNoID0gJyc7XG5cdFx0fTtcblx0XHR2bS5jYW5jZWwgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHQkbW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTtcblx0XHR9O1xuXHRcdHZtLnN1Ym1pdEJyYW5jaCA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdCRtb2RhbEluc3RhbmNlLmNsb3NlKHtcblx0XHRcdFx0dHlwZTogdm0uY2hlY2sudG9Mb3dlckNhc2UoKSxcblx0XHRcdFx0dmFsdWU6IHZtLnNlbGVjdGVkQnJhbmNoXG5cdFx0XHR9KTtcblx0XHR9O1xuXHRcdHZtLnRvZ2dsZUJyYW5jaCA9IGZ1bmN0aW9uIChicmFuY2gpIHtcblx0XHRcdHZtLmJyYW5jaEtleSA9ICcnO1xuXHRcdFx0dm0uc2VsZWN0ZWRCcmFuY2ggPSBicmFuY2g7XG5cdFx0fTtcblx0fVxuXHRCcmFuY2hDaGVja01vZGFsQ3RyLiRpbmplY3QgPSBbJyRtb2RhbEluc3RhbmNlJywgJyRkb21lUHJvamVjdCcsICdjb2RlSW5mbycsICdwcm9qZWN0SWQnXTtcbn0pKCk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
