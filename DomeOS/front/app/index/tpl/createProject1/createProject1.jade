.mod-project.project-create1(ng-form role="form" name="projectNameForm" novalidate ng-class="{'need-valid':needValid}")
    loading(ng-if="isLoading")
    .pro-item.com-chose-repository
        span.opt-title 选择代码仓库
        span.repository(ng-click="toggleCodeManager('gitlab')" ng-class="{active:codeManager=='gitlab'}")
            i.icon-gitlab
            | GitLab
        //- span.repository(ng-click="codeRepository='github'" ng-class="{active:codeRepository=='github'}")
            i.icon-github
            | GitHub
        span.repository.nohub(ng-click="toggleCodeManager(null)" ng-class="{active:!codeManager}") 不使用代码仓库
    .chose-account(ng-show="codeManager")
        input.pull-right.ui-input-search.ui-input-fill(placeholder="请输入项目名称查询" ng-model="pronameKey")
        ul(list-scroll width-offset="740")
            li.nav-option(disabled="true")
                span
                    a.icon-last.to-last
                    a.icon-next.to-next
            li(ng-repeat="user in gitLabInfo"  ng-class="{'active':currentUserId===user.id}")
                a.link-list(ng-bind="user.userName" ng-click="setProjectList(user)")
        span.related
            a(ng-click="toRelated()")
                i.icon-add-green
                | 关联新账户
    ul.list-project(ng-show="codeManager")
        li(ng-if="!projectListFilter||projectListFilter.length===0")
            span.no-result 无项目信息
        li(ng-repeat="pro in projectListFilter=(projectList|filter:{'nameWithNamespace':pronameKey}|listPage:pageSize:pageNo)" ng-click="setCurrentProject(pro)" ng-class="{'active':currentProject.projectId===pro.projectId}")
            span.project-name(ng-cloak)
                i.icon-check(ng-if="currentProject.projectId===pro.projectId")
                | {{pro.nameWithNamespace}}
            span.project-description(ng-bind="isDescriptionNull(pro.description)")
    div.com-page-list(list-no length="projectList.length" pageno="pageNo" size="{{pageSize}}" ng-show="codeManager")
    .pro-item.branch-setting(ng-show="codeManager")
        span.opt-title 自动构建
        div.opt-content
            p.txt-prompt.opt-descrip  当所选分支更新或出现新tag时，会自动触发构建，生成新的项目镜像。请不要在频繁push的分支上开启自动构建，以免频繁触发构建，造成资源浪费。
            span.branch
                input#master.ui-check(type="checkbox" name="branches" ng-model="autoBuildInfo.master")
                label(for="master") master
            span.branch
                input#tag.ui-check(type="checkbox" name="branches" ng-true-value="1"  ng-false-value="0" ng-model="autoBuildInfo.tag")
                label(for="tag") tag
            span.branch
                input#other.ui-check(type="checkbox" name="branches" ng-model="autoBuildInfo.other")
                label(for="other" ng-if="!autoBuildInfo.other") 指定其他分支
                label(for="other" ng-if="autoBuildInfo.other")
                input.ui-input-white.txt-branch(placeholder="请输入分支名称，用逗号分隔 e.g. dev,fix-bug"  ng-if="autoBuildInfo.other" ng-model="autoBuildInfo.branches" name="other" required)
    .pro-item
        span.opt-title 项目构建类型
        div.opt-content
            p.txt-prompt.opt-descrip 项目需要构建成Docker镜像，才能被部署到运行环境中。项目构建过程包含了代码编译、docker build等操作。您可以选择一种项目构建类型，并完成相应配置。
            span.setting-type(ng-class="{'active':projectType=='common'}" ng-click="projectType = 'common'")
                h4 通用配置
                p 适合各种编程语言的项目，在页面上配置Dockerfile以及运行过程的相关信息。
            span.setting-type(ng-class="{'active':projectType=='custom'}" ng-click="projectType = 'custom'" ng-show="codeManager")
                h4 Java专属配置
                p 专为Java项目打造，分离编译和构建过程，精简项目镜像。
            span.setting-type(ng-class="{'active':projectType=='dockerfile'}" ng-click="projectType = 'dockerfile'" ng-show="codeManager")
                h4 代码内Dockerfile
                p 使用代码项目内的Dockerfile。请确保构建所用的代码分支或tag中存在可用的Dockerfile。
    .pro-item
        span.opt-title 创建者
        creator-selection(default-user-id="creator.id" default-user-type="{{creator.type}}" change-event="changeCreator(user)")
    .pro-item.project-info
        span.opt-title 项目名称 *
        .creator-info
            span.creator-name(ng-bind="creator.name")
            | /
            input.ui-input-white(placeholder="输入项目名称" is-project-exist group-name="{{creator.name}}" name="proname" ng-pattern="/^[a-z0-9]+([._-][a-z0-9]+)*$/" ng-model="projectName" ng-model-options="{updateOn:'default blur',debounce:{default:500,blur:0}}" required)
        span.tool-inline-error(ng-if="(needValid||projectNameForm.proname.$dirty)&&projectNameForm.proname.$error.required") 必填
        span.tool-inline-error(ng-if="(needValid||projectNameForm.proname.$dirty)&&!projectNameForm.proname.$error.required&&projectNameForm.proname.$error.isProjectExist") 项目已存在
        span.tool-inline-error(ng-if="(needValid||projectNameForm.proname.$dirty)&&!projectNameForm.proname.$error.required&&projectNameForm.proname.$error.pattern") 非法的名称
    .com-bottom-option
        button.ui-btn.ui-btn-bright.ui-btn-md(ng-click="needValid=true;projectNameForm.$valid&&toNext()") 下一步
script(type="text/ng-template" id="loginModal.html")
    .d-modal-header 登录Gitlab
    ul.modal-body.modal-info.modal-gitlab(ng-form role="form" name="loginForm")
        li
            label.info-name(for="username") 用户名
            .info-txt.text-left
                input#username.full.ui-input-white(placeholder="用户名" name="username" ng-model="username" required)
                span.txt-error(ng-show="loginForm.username.$dirty&&loginForm.username.$invalid") 必填
        li
            label.info-name(for="password") 密码
            .info-txt.text-left
                input#password.full.ui-input-white(placeholder="密码" name="password" type="password" ng-model="password" required)
                span.txt-error(ng-show="loginForm.password.$dirty&&loginForm.password.$invalid") 必填
        .txt-error.txt-failed(ng-bind="errorTxt")
    .modal-footer.text-right
        button.ui-btn.ui-btn-sm.ui-btn-white(ng-click="close()") 取消
        button.ui-btn.ui-btn-sm.ui-btn-bright(ng-disabled="loginForm.$invalid||isWaiting" ng-click="toLogin()") 确定